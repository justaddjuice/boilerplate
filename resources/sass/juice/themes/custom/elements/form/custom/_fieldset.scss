@charset 'utf-8';

/*  ========================================================================
    JUICE -> THEMES -> CUSTOM -> ELEMENTS -> FORM -> CUSTOM -> FIELDSET
    ========================================================================  */

// Check if the elements with custom fieldset should be imported
@if $import-elements and $import-element-custom-fieldset {
    .custom-fieldset {
        // // Variables
        // --border-radius-bottom-left: var(--default-border-radius-bottom-left);
        // --border-radius-bottom-right: var(--default-border-radius-bottom-right);
        // --border-radius-top-left: var(--default-border-radius-top-left);
        // --border-radius-top-right: var(--default-border-radius-top-right);
        // --border-style: var(--default-border-style);
        // --border-width-bottom: var(--default-border-width-bottom);
        // --border-width-divider: var(--default-border-width-divider);
        // --border-width-left: var(--default-border-width-left);
        // --border-width-right: var(--default-border-width-right);
        // --border-width-top: var(--default-border-width-top);
        // --element-spacing: var(--default-element-spacing);

        // Check if the custom fieldset size modifiers should be declared
        @if $custom-fieldset-size-modifiers {
            // Cycle through all of the sizes
            @each $size in $sizes {
                // Modifiers: Sizes
                &.is-#{$size} {
                    // Nested selectors
                    input {
                        // // Variables
                        // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                        // --font-size: var(--default-font-size-#{$size});
                        // --height: var(--default-element-height-#{$size});
                    }

                    select {
                        // // Variables
                        // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                        // --font-size: var(--default-font-size-#{$size});
                        // --height: var(--default-element-height-#{$size});
                    }

                    textarea {
                        // // Variables
                        // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                        // --font-size: var(--default-font-size-#{$size});
                    }

                    #{button} {
                        // // Variables
                        // --font-size: var(--default-font-size-#{$size});
                        // --height: var(--default-element-height-#{$size});
                        // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 1.5);
                    }
                }

                // Check if the custom fieldset size modifier breakpoints should be declared
                @if $custom-fieldset-size-modifier-breakpoints {
                    // Cycle through all of the breakpoints
                    @each $breakpoint-name, $breakpoint in $breakpoints {
                        // Breakpoint
                        @include breakpoint($breakpoint-name) {
                            // Modifiers: Size
                            &.is-#{$size}\@#{$breakpoint-name} {
                                // Nested selectors
                                input {
                                    // // Variables
                                    // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                                    // --font-size: var(--default-font-size-#{$size});
                                    // --height: var(--default-element-height-#{$size});
                                }

                                select {
                                    // // Variables
                                    // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                                    // --font-size: var(--default-font-size-#{$size});
                                    // --height: var(--default-element-height-#{$size});
                                }

                                textarea {
                                    // // Variables
                                    // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 2);
                                    // --font-size: var(--default-font-size-#{$size});
                                }

                                #{button} {
                                    // // Variables
                                    // --font-size: var(--default-font-size-#{$size});
                                    // --height: var(--default-element-height-#{$size});
                                    // --content-spacing: calc(var(--default-content-spacing-#{$size}) / 1.5);
                                }
                            }
                        }
                    }
                }
            }
        }

        // Check if the custom fieldset feedback modifiers should be declared
        @if $custom-fieldset-feedback-modifiers {
            // Cycle through all of the feedback colors
            @each $feedback-name, $color in $feedback-colors {
                // Modifiers: Feedback colors
                &.has-#{$feedback-name} {
                    // Nested selectors
                    input,
                    select,
                    textarea {
                        // Modifiers
                        &.custom-fieldset__spotlight {
                            // // Variables
                            // --border-color: var(--feedback-color-#{$feedback-name});

                            // Pseudo classes
                            &:focus {
                                // // Variables
                                // --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                            }

                            &:active {
                                // // Variables
                                // --accessibility-focus-color: var(--feedback-color-#{$feedback-name}-accessibility-focus);
                            }
                        }
                    }
                }
            }
        }
    }
}
